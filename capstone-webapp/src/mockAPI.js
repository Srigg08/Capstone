
const availableTimesByDate = {
    '2024-08-01': ['10:00', '11:00', '12:00'],
    '2024-08-02': ['14:00', '15:00', '16:00'],
    '2024-08-03': ['10:00', '11:00', '12:00'],
    '2024-08-04': ['14:00', '15:00', '16:00'],
    '2024-08-05': ['10:00', '11:00', '12:00'],
    '2024-08-06': ['14:00', '15:00', '16:00'],
    '2024-08-07': ['10:00', '11:00', '12:00'],
    '2024-08-08': ['14:00', '15:00', '16:00'],
    '2024-08-09': ['10:00', '11:00', '12:00'],
    '2024-08-10': ['14:00', '15:00', '16:00'],
    '2024-08-11': ['10:00', '11:00', '12:00'],
    '2024-08-12': ['14:00', '15:00', '16:00'],
    '2024-08-13': ['10:00', '11:00', '12:00'],
    '2024-08-14': ['14:00', '15:00', '16:00'],
    '2024-08-15': ['10:00', '11:00', '12:00'],
    '2024-08-16': ['14:00', '15:00', '16:00'],
    '2024-08-17': ['09:00', '11:00', '12:00'],
    '2024-08-18': ['14:00', '15:00', '16:00'],
    '2024-08-19': ['10:00', '11:00', '12:00'],
    '2024-08-20': ['14:00', '15:00', '16:00'],
    '2024-08-21': ['10:00', '11:00', '15:00'],
    '2024-08-22': ['10:00', '11:00', '12:00'],
    '2024-08-23': ['10:00', '11:00', '14:00'],
    '2024-08-24': ['14:00', '15:00', '16:00'],
    '2024-08-25': ['10:00', '11:00', '12:00'],
    '2024-08-26': ['14:00', '15:00', '16:00'],
    '2024-08-27': ['10:00', '11:00', '12:00'],
    '2024-08-28': ['10:00', '11:00', '12:00'],
    '2024-08-29': ['14:00', '15:00', '16:00'],
    '2024-08-30': ['10:00', '11:00', '12:00'],
    '2024-08-31': ['14:00', '15:00', '16:00'],
    '2024-09-01': ['10:00', '11:00', '12:00'],
    '2024-09-02': ['14:00', '15:00', '16:00'],
    '2024-09-03': ['12:00', '01:00', '02:00'],
    '2024-09-04': ['14:00', '15:00', '16:00'],
    '2024-09-05': ['10:00', '11:00', '12:00'],
    '2024-09-06': ['14:00', '15:00', '16:00'],
    '2024-09-07': ['10:00', '11:00', '12:00']
  };


  const fetchAPI = (date) => {
    console.log(date);
    return new Promise((resolve, reject) => {
        setTimeout(() =>{
            if(availableTimesByDate[date]){
                resolve(availableTimesByDate[date])
            }
            else{
                reject(new Error('No available times for the selected date.'));
            }
        } , 1000)
    })
  }

  const submitAPI = (formData) => {
    availableTimesByDate[formData.date] = availableTimesByDate[formData.date].filter(time => time !== formData.time);

    return new Promise((resolve, reject) => {
      setTimeout(() => {
        if (formData) {
          resolve(true); // Simulate successful submission
        } else {
          reject(new Error('Form submission failed.'));
        }
      }, 1000); // Simulate API delay
    });
  };

  export{fetchAPI,submitAPI}